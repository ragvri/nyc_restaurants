openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: Search restaurants with nyc inspection result
    url: https://virtserver.swaggerhub.com/poyuH/RestaurantInspection/1.0.0
info:
  description: Search restaurants with nyc inspection result
  version: "1.0.0"
  title: Restaurant Inspection Results
  contact:
    email: po-yu.huang@columbia.edu
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /restaurants:
    get:
      tags:
        - developers
      summary: searches restaurants
      operationId: searchRestaurants
      description: |
        By passing in the appropriate options, users can search for
        available restaurants near the users
      parameters:
        - in: query
          name: userLocation
          description: longitude and latitude of the user location
          required: true
          schema:
            $ref: '#/components/schemas/Location'
        - in: query
          name: cuisine
          description: cuisine type
          required: false
          schema:
            type: string
        - in: query
          name: hygieneGrade
          description: letter grade of the hygiene from NYC inspection results
          schema:
            $ref: '#/components/schemas/HygieneGrade'
        - in: query
          name: hygieneScore
          description: number of sanitary violations from NYC inspection results (lower the better)
          schema:
            $ref: '#/components/schemas/HygieneScore'
        - in: query
          name: priceGrade
          description: letter grade of price based on Yelp 
          schema:
            $ref: '#/components/schemas/PriceGrade'
        - in: query
          name: restaurantName
          description: name of the restaurant
          required: false
          schema:
            type: string
        - in: query
          name: distance
          description: 'the search radius in meters'
          schema:
           $ref: '#/components/schemas/Distance'
      responses:
        '200':
          description: restaurants matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestaurantBrief'
        '400':
          description: bad input parameter
        '404':
          description: url not found
        '500':
          description: The server encountered an unexpected condition which prevented it from fulfilling the request.
    post:
      tags:
        - admins
      summary: adds an inventory item
      operationId: addInventory
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantBrief'
        description: Inventory item to add
components:
  schemas:
    RestaurantBrief:
      description: brief information of the restaurants
      type: object
      required:
        - phone
        - name
        - location
      properties:
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        name:
          type: string
          description: name of the restaurant
        location:
          $ref: '#/components/schemas/Location'
        hygieneGrade:
          $ref: '#/components/schemas/HygieneGrade'
        priceGrade:
          $ref: '#/components/schemas/PriceGrade'
    Location:
      type: object
      required:
      - longitude
      - latitude
      properties:
        longitude:
          type: number
          example: 154.1234
        latitude:
          type: number
          example: 14.1234
    HygieneGrade:
      type: string
      enum:
        - A
        - B
        - C
      default: A
    HygieneScore:
      description: 'number of sanitary violations from NYC inspection results (lower the better)'
      type: string
      enum:
        - '0-13'
        - '14-27'
        - '>=28'
    PriceGrade:
      type: string
      enum:
        - $
        - $$
        - $$$
        - $$$$
    Distance:
      description: 'distance in meters'
      type: number
      minimum: 100
      maximum: 10000
      default: 100
    PhoneNumber:
      type: string
      pattern: '^\d{10}$'
      example: '9298887777'